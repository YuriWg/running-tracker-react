{"ast":null,"code":"// src/utils/formatters.js\n\nexport const formatDistance = distance => {\n  return `${distance.toFixed(1)} km`;\n};\n\n// 格式化配速显示\nexport function formatPace(pace) {\n  if (!pace) return \"未记录\";\n  const min = Math.floor(pace);\n  const sec = Math.round((pace - min) * 60);\n  return `${min}'${sec.toString().padStart(2, '0')}\"`;\n}\n\n// 获取心率区间详情\nexport function getHeartRateZoneDetail(hr) {\n  if (!hr) return {\n    zone: \"未记录\",\n    effect: \"无法评估训练效果\"\n  };\n  if (hr < 130) return {\n    zone: \"放松区间\",\n    effect: \"基础耐力训练，适合恢复跑和长距离慢跑，提升脂肪燃烧效率，建立跑步基础\"\n  };\n  if (hr < 150) return {\n    zone: \"有氧区间\",\n    effect: \"改善心肺功能，提高有氧能力，是最佳的耐力训练区间，可以持续较长时间\"\n  };\n  if (hr < 170) return {\n    zone: \"力量区间\",\n    effect: \"提高乳酸耐受能力，增强肌肉力量，适合间歇训练，提升速度和爆发力\"\n  };\n  return {\n    zone: \"极限区间\",\n    effect: \"接近最大心率，提升无氧能力和速度极限，只能维持短时间，需要充分热身和谨慎使用\"\n  };\n}\n\n// 获取心率颜色\nexport function getHeartRateColor(hr) {\n  if (!hr) return '#87CEEB'; // shortRun\n  if (hr < 130) return '#7FD8BE'; // heartRate.low\n  if (hr < 150) return '#FFD700'; // heartRate.medium\n  return '#FF9966'; // heartRate.high\n}\n\n// 生成诗意距离描述\nexport function getPoeticDistanceDescription(distance) {\n  const references = {\n    marathon: 42.195,\n    // 马拉松长度\n    everest: 8.848,\n    // 珠穆朗玛峰高度\n    greatWall: 21196,\n    // 长城长度\n    earthCircumference: 40075 // 地球周长\n  };\n  if (distance > 0) {\n    if (distance < references.everest) {\n      const everestPercent = (distance / references.everest * 100).toFixed(1);\n      return `已跑过珠穆朗玛峰高度的${everestPercent}%, 向着云端攀登`;\n    } else if (distance < references.marathon * 3) {\n      const marathons = (distance / references.marathon).toFixed(1);\n      return `完成了${marathons}个马拉松的距离，奔跑的脚步从未停歇`;\n    } else if (distance < references.greatWall) {\n      const moonDistance = (distance / 384400 * 100).toFixed(2);\n      return `已跑了月球距离的${moonDistance}%, 奔向星辰大海`;\n    } else if (distance < references.earthCircumference) {\n      const earthPercent = (distance / references.earthCircumference * 100).toFixed(1);\n      return `已环绕地球${earthPercent}%, 追逐着晨光与暮色`;\n    } else {\n      const earthLaps = (distance / references.earthCircumference).toFixed(2);\n      return `环绕地球${earthLaps}圈，脚步丈量了整个星球`;\n    }\n  }\n  return '';\n}\n\n// 格式化心率显示\nexport const formatHeartRate = heartRate => {\n  return `${heartRate} BPM`;\n};\nexport const formatDate = date => {\n  const options = {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric'\n  };\n  return new Date(date).toLocaleDateString(undefined, options);\n};","map":{"version":3,"names":["formatDistance","distance","toFixed","formatPace","pace","min","Math","floor","sec","round","toString","padStart","getHeartRateZoneDetail","hr","zone","effect","getHeartRateColor","getPoeticDistanceDescription","references","marathon","everest","greatWall","earthCircumference","everestPercent","marathons","moonDistance","earthPercent","earthLaps","formatHeartRate","heartRate","formatDate","date","options","year","month","day","Date","toLocaleDateString","undefined"],"sources":["/Users/wyl/Documents/GitHub/running-tracker-react/src/utils/formatters.js"],"sourcesContent":["// src/utils/formatters.js\n\nexport const formatDistance = (distance) => {\n    return `${distance.toFixed(1)} km`;\n};\n\n// 格式化配速显示\nexport function formatPace(pace) {\n  if (!pace) return \"未记录\";\n  const min = Math.floor(pace);\n  const sec = Math.round((pace - min) * 60);\n  return `${min}'${sec.toString().padStart(2, '0')}\"`;\n}\n\n// 获取心率区间详情\nexport function getHeartRateZoneDetail(hr) {\n  if (!hr) return {\n    zone: \"未记录\",\n    effect: \"无法评估训练效果\"\n  };\n  \n  if (hr < 130) return {\n    zone: \"放松区间\",\n    effect: \"基础耐力训练，适合恢复跑和长距离慢跑，提升脂肪燃烧效率，建立跑步基础\"\n  };\n  \n  if (hr < 150) return {\n    zone: \"有氧区间\",\n    effect: \"改善心肺功能，提高有氧能力，是最佳的耐力训练区间，可以持续较长时间\"\n  };\n  \n  if (hr < 170) return {\n    zone: \"力量区间\",\n    effect: \"提高乳酸耐受能力，增强肌肉力量，适合间歇训练，提升速度和爆发力\"\n  };\n  \n  return {\n    zone: \"极限区间\",\n    effect: \"接近最大心率，提升无氧能力和速度极限，只能维持短时间，需要充分热身和谨慎使用\"\n  };\n}\n\n// 获取心率颜色\nexport function getHeartRateColor(hr) {\n  if (!hr) return '#87CEEB'; // shortRun\n  if (hr < 130) return '#7FD8BE'; // heartRate.low\n  if (hr < 150) return '#FFD700'; // heartRate.medium\n  return '#FF9966'; // heartRate.high\n}\n\n// 生成诗意距离描述\nexport function getPoeticDistanceDescription(distance) {\n  const references = {\n    marathon: 42.195,     // 马拉松长度\n    everest: 8.848,       // 珠穆朗玛峰高度\n    greatWall: 21196,     // 长城长度\n    earthCircumference: 40075 // 地球周长\n  };\n  \n  if (distance > 0) {\n    if (distance < references.everest) {\n      const everestPercent = (distance / references.everest * 100).toFixed(1);\n      return `已跑过珠穆朗玛峰高度的${everestPercent}%, 向着云端攀登`;\n    } \n    else if (distance < references.marathon * 3) {\n      const marathons = (distance / references.marathon).toFixed(1);\n      return `完成了${marathons}个马拉松的距离，奔跑的脚步从未停歇`;\n    }\n    else if (distance < references.greatWall) {\n      const moonDistance = (distance / 384400 * 100).toFixed(2);\n      return `已跑了月球距离的${moonDistance}%, 奔向星辰大海`;\n    }\n    else if (distance < references.earthCircumference) {\n      const earthPercent = (distance / references.earthCircumference * 100).toFixed(1);\n      return `已环绕地球${earthPercent}%, 追逐着晨光与暮色`;\n    }\n    else {\n      const earthLaps = (distance / references.earthCircumference).toFixed(2);\n      return `环绕地球${earthLaps}圈，脚步丈量了整个星球`;\n    }\n  }\n  return '';\n}\n\n// 格式化心率显示\nexport const formatHeartRate = (heartRate) => {\n    return `${heartRate} BPM`;\n};\n\nexport const formatDate = (date) => {\n    const options = { year: 'numeric', month: 'long', day: 'numeric' };\n    return new Date(date).toLocaleDateString(undefined, options);\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}