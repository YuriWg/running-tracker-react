{"ast":null,"code":"// src/utils/formatters.js\nexport const formatDistance=distance=>{return`${distance.toFixed(1)} km`;};// 格式化配速显示\nexport function formatPace(pace){if(!pace)return\"未记录\";const min=Math.floor(pace);const sec=Math.round((pace-min)*60);return`${min}'${sec.toString().padStart(2,'0')}\"`;}// 获取心率区间详情\nexport function getHeartRateZoneDetail(hr){if(!hr)return{zone:\"未记录\",effect:\"无法评估训练效果\"};if(hr<130)return{zone:\"放松区间\",effect:\"基础耐力训练，适合恢复跑和长距离慢跑，提升脂肪燃烧效率，建立跑步基础\"};if(hr<150)return{zone:\"有氧区间\",effect:\"改善心肺功能，提高有氧能力，是最佳的耐力训练区间，可以持续较长时间\"};if(hr<170)return{zone:\"力量区间\",effect:\"提高乳酸耐受能力，增强肌肉力量，适合间歇训练，提升速度和爆发力\"};return{zone:\"极限区间\",effect:\"接近最大心率，提升无氧能力和速度极限，只能维持短时间，需要充分热身和谨慎使用\"};}// 获取心率颜色\nexport function getHeartRateColor(hr){if(!hr)return'#87CEEB';// shortRun\nif(hr<130)return'#7FD8BE';// heartRate.low\nif(hr<150)return'#FFD700';// heartRate.medium\nreturn'#FF9966';// heartRate.high\n}// 生成诗意距离描述\nexport function getPoeticDistanceDescription(distance){const references={marathon:42.195,// 马拉松长度\neverest:8.848,// 珠穆朗玛峰高度\ngreatWall:21196,// 长城长度\nearthCircumference:40075// 地球周长\n};if(distance>0){if(distance<references.everest){const everestPercent=(distance/references.everest*100).toFixed(1);return`已跑过珠穆朗玛峰高度的${everestPercent}%, 向着云端攀登`;}else if(distance<references.marathon*3){const marathons=(distance/references.marathon).toFixed(1);return`完成了${marathons}个马拉松的距离，奔跑的脚步从未停歇`;}else if(distance<references.greatWall){const moonDistance=(distance/384400*100).toFixed(2);return`已跑了月球距离的${moonDistance}%, 奔向星辰大海`;}else if(distance<references.earthCircumference){const earthPercent=(distance/references.earthCircumference*100).toFixed(1);return`已环绕地球${earthPercent}%, 追逐着晨光与暮色`;}else{const earthLaps=(distance/references.earthCircumference).toFixed(2);return`环绕地球${earthLaps}圈，脚步丈量了整个星球`;}}return'';}// 格式化心率显示\nexport const formatHeartRate=heartRate=>{return`${heartRate} BPM`;};export const formatDate=date=>{const options={year:'numeric',month:'long',day:'numeric'};return new Date(date).toLocaleDateString(undefined,options);};","map":{"version":3,"names":["formatDistance","distance","toFixed","formatPace","pace","min","Math","floor","sec","round","toString","padStart","getHeartRateZoneDetail","hr","zone","effect","getHeartRateColor","getPoeticDistanceDescription","references","marathon","everest","greatWall","earthCircumference","everestPercent","marathons","moonDistance","earthPercent","earthLaps","formatHeartRate","heartRate","formatDate","date","options","year","month","day","Date","toLocaleDateString","undefined"],"sources":["/Users/wyl/Documents/GitHub/running-tracker-react/src/utils/formatters.js"],"sourcesContent":["// src/utils/formatters.js\n\nexport const formatDistance = (distance) => {\n    return `${distance.toFixed(1)} km`;\n};\n\n// 格式化配速显示\nexport function formatPace(pace) {\n  if (!pace) return \"未记录\";\n  const min = Math.floor(pace);\n  const sec = Math.round((pace - min) * 60);\n  return `${min}'${sec.toString().padStart(2, '0')}\"`;\n}\n\n// 获取心率区间详情\nexport function getHeartRateZoneDetail(hr) {\n  if (!hr) return {\n    zone: \"未记录\",\n    effect: \"无法评估训练效果\"\n  };\n  \n  if (hr < 130) return {\n    zone: \"放松区间\",\n    effect: \"基础耐力训练，适合恢复跑和长距离慢跑，提升脂肪燃烧效率，建立跑步基础\"\n  };\n  \n  if (hr < 150) return {\n    zone: \"有氧区间\",\n    effect: \"改善心肺功能，提高有氧能力，是最佳的耐力训练区间，可以持续较长时间\"\n  };\n  \n  if (hr < 170) return {\n    zone: \"力量区间\",\n    effect: \"提高乳酸耐受能力，增强肌肉力量，适合间歇训练，提升速度和爆发力\"\n  };\n  \n  return {\n    zone: \"极限区间\",\n    effect: \"接近最大心率，提升无氧能力和速度极限，只能维持短时间，需要充分热身和谨慎使用\"\n  };\n}\n\n// 获取心率颜色\nexport function getHeartRateColor(hr) {\n  if (!hr) return '#87CEEB'; // shortRun\n  if (hr < 130) return '#7FD8BE'; // heartRate.low\n  if (hr < 150) return '#FFD700'; // heartRate.medium\n  return '#FF9966'; // heartRate.high\n}\n\n// 生成诗意距离描述\nexport function getPoeticDistanceDescription(distance) {\n  const references = {\n    marathon: 42.195,     // 马拉松长度\n    everest: 8.848,       // 珠穆朗玛峰高度\n    greatWall: 21196,     // 长城长度\n    earthCircumference: 40075 // 地球周长\n  };\n  \n  if (distance > 0) {\n    if (distance < references.everest) {\n      const everestPercent = (distance / references.everest * 100).toFixed(1);\n      return `已跑过珠穆朗玛峰高度的${everestPercent}%, 向着云端攀登`;\n    } \n    else if (distance < references.marathon * 3) {\n      const marathons = (distance / references.marathon).toFixed(1);\n      return `完成了${marathons}个马拉松的距离，奔跑的脚步从未停歇`;\n    }\n    else if (distance < references.greatWall) {\n      const moonDistance = (distance / 384400 * 100).toFixed(2);\n      return `已跑了月球距离的${moonDistance}%, 奔向星辰大海`;\n    }\n    else if (distance < references.earthCircumference) {\n      const earthPercent = (distance / references.earthCircumference * 100).toFixed(1);\n      return `已环绕地球${earthPercent}%, 追逐着晨光与暮色`;\n    }\n    else {\n      const earthLaps = (distance / references.earthCircumference).toFixed(2);\n      return `环绕地球${earthLaps}圈，脚步丈量了整个星球`;\n    }\n  }\n  return '';\n}\n\n// 格式化心率显示\nexport const formatHeartRate = (heartRate) => {\n    return `${heartRate} BPM`;\n};\n\nexport const formatDate = (date) => {\n    const options = { year: 'numeric', month: 'long', day: 'numeric' };\n    return new Date(date).toLocaleDateString(undefined, options);\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}